XfromT <- function(ttr, R = 1){
    ttr <- cbind(ttr)
    t1 <- ttr[1, ]
    t2 <- ttr[2, ]
    r <- ttr[3, ]
    ##
    rbind(
        x1 = r * cos(t1) + R * cos(t1 + t2),
        x2 = r * sin(t1) + R * sin(t1 + t2),
        r = r
    )
}

TfromX <- function(xxr, R = 1){
    xxr <- cbind(xxr)
    x1 <- xxr[1, ]
    x2 <- xxr[2, ]
    r <- xxr[3, ]
    xx2 <- x1^2 + x2^2
    t1 <-  2 * atan((
            2 * r * x2 - sqrt(2 * r^2 * (R^2 + xx2) - (xx2 - R^2)^2 - r^4)
        ) / (
            xx2 + r^2 + 2 * r * x1 - R^2
        ))
    ## define different branch for arctan
    temp <- !is.na(t1) & t1 < 0
    t1[temp] <- t1[temp] + 2 * pi
    ##
    rbind(
        t1 = t1,
        t2 = -2 * atan((
            sqrt(2 * r^2 * (R^2 + xx2) - (xx2 - R^2)^2 - r^4)
        ) / (
            (r - R)^2 - xx2
        )) ,
        r = r
    )
}

## Check inverse
n <- 1e6
samplesR <- 10^(runif(n = n, -2, 2)) # from 0.01 to 100
samplest1 <- runif(n = n, 0, 2 * pi)
samplest2 <- runif(n = n, 0, pi)
samplesr <- 10^(runif(n = n, log10(2 * samplesR), log10(max(2 * samplesR) + 100)))
## combine
samplesttr <-  rbind(t1 = samplest1, t2 = samplest2, r = samplesr)
##
## calculate x,r from theta,r
samplesxxr <- XfromT(samplesttr, samplesR)
## calculate theta,r from x,r
samplesinv <- TfromX(samplesxxr, samplesR)
## ## see some values (uncomment only if n is small)
## samplesttr
## samplesinv
## Check max discrepancy
max(abs(samplesttr - samplesinv))
# > [1] 9.80312e-06
